{"version":3,"sources":["app.js","category/category.js","common/common.js","product/product.js","category/services/category-service.js","common/directives/grid.js","common/directives/pagination.js","common/directives/spinner.js","common/directives/toolbar.js","common/services/pagination.js","product/controllers/product-list.controller.js","product/services/product-service.js","category/controllers/admin/admin-category-add.controller.js","category/controllers/admin/admin-category-list.controller.js","product/controllers/admin/admin-product-add.controller.js","product/controllers/admin/admin-product-list.controller.js"],"names":[],"mappings":"AAAA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["var app = angular.module('myApp', ['ngRoute', 'ngResource','ngAnimate','ui.bootstrap','ui.tinymce','toaster','myApp.common','myApp.product','myApp.category']);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.category', []);\r\n\r\nangular.module('myApp.category').config(['$routeProvider', function($routeProvider) {\r\n    $routeProvider\r\n        .when('/admin/category', {\r\n            controller: 'AdminCategoryListController',\r\n            templateUrl: 'templates/admin/categories/list.html'\r\n        })\r\n        .when('/admin/category/add', {\r\n            controller: 'AdminCategoryAddController',\r\n            templateUrl: 'templates/admin/categories/add.html'\r\n        })\r\n}]);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.common',['smart-table']);\r\n\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.product', []);\r\n\r\nangular.module('myApp.product').config(['$routeProvider', function($routeProvider) {\r\n    $routeProvider\r\n        .when('/', {\r\n            controller: 'ProductListController',\r\n            templateUrl: 'templates/products/list.html'\r\n        })\r\n        .when('/admin/product', {\r\n            controller: 'AdminProductListController',\r\n            templateUrl: 'templates/admin/products/list.html'\r\n        })\r\n        .when('/admin/product/add', {\r\n            controller: 'AdminProductAddController',\r\n            templateUrl: 'templates/admin/products/add.html'\r\n        })\r\n}]);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.category').factory('Category', ['$resource',\r\n    function($resource) {\r\n        return $resource('/category/:id', {id: '@id'},{\r\n                update: {\r\n                    method: 'PUT'\r\n                }\r\n            }\r\n        );\r\n    }]\r\n);\r\n","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\nangular.module('myApp.common').directive('appGrid', ['PaginationService', function (PaginationService) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: '/templates/common/directives/grid.html',\r\n        scope: {\r\n            url: '@',\r\n            cols: '=',\r\n            key: '@'\r\n        },\r\n        link: {\r\n            pre: function (scope, element, attrs, ctrl) {\r\n\r\n                scope.getPage = function(tableState) {\r\n\r\n                    scope.isLoading = true;\r\n\r\n                    PaginationService.getPage(scope.url, tableState, function(result){\r\n\r\n                        scope.items = result.data;\r\n\r\n                        scope.total = result.total;\r\n\r\n                        scope.isLoading = false;\r\n                    });\r\n\r\n                };\r\n\r\n                scope.checkAll = function(){\r\n                    angular.forEach(scope.items, function (item) {\r\n                        item.Selected = !scope.selectedAll;\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}]);\r\n\r\nangular.module('myApp.common').filter('picker', function($filter) {\r\n    return function(value, filterName) {\r\n        if(filterName){\r\n            if(filterName == 'status'){\r\n                if(value == 1){\r\n                    return 'Enabled';\r\n                } else{\r\n                    return 'Disabled';\r\n                }\r\n            }\r\n            else{\r\n                return $filter(filterName)(value);\r\n            }\r\n        }\r\n        else{\r\n            return value;\r\n        }\r\n    };\r\n});","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\n\r\nangular.module('myApp.common').directive('appPagination', function () {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            'total': '='\r\n        },\r\n        templateUrl: '/templates/common/directives/pagination.html',\r\n        link: function (scope, elem, attrs) {\r\n\r\n        }\r\n    }\r\n});","/**\r\n * Created by doanthuan on 4/18/2015.\r\n */\r\nangular.module('myApp.common').directive('appSpinner', function () {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<div class=\"app-spinner\">' +\r\n        '<span class=\"fa fa-spinner fa-spin\"></span>' +\r\n        '</div>'\r\n    };\r\n});","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\nangular.module('myApp.common').directive('appToolbar', ['$location', function ($location) {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            'pageTitle': '@',\r\n            'buttons': '='\r\n        },\r\n        templateUrl: '/templates/common/directives/toolbar.html',\r\n        link:\r\n        {\r\n            pre: function (scope, elem, attrs) {\r\n                scope.toolbarButtons = [];\r\n                if(scope.buttons){\r\n                    scope.buttons.forEach(function(aButton){\r\n\r\n                        if(typeof aButton == 'string'){\r\n                            aButton = {name:aButton};\r\n                        }\r\n                        var buttonName = aButton.name;\r\n\r\n                        var button = null;\r\n                        switch(buttonName){\r\n                            case 'add':\r\n                                button = {\r\n                                    text: 'Add New',\r\n                                    class: 'btn-success',\r\n                                    icon: 'glyphicon glyphicon-plus',\r\n                                    click: function(){\r\n                                        var curUrl = $location.path();\r\n                                        $location.path(curUrl + '/add');\r\n                                    }\r\n                                };\r\n                                break;\r\n                            case 'delete':\r\n                                button = {\r\n                                    text: 'Delete',\r\n                                    class: 'btn-danger',\r\n                                    icon: 'glyphicon glyphicon-remove',\r\n                                    click: function(){\r\n                                        scope.$parent.deleteItems();\r\n                                    }\r\n                                };\r\n                                break;\r\n                            case 'save':\r\n                                button = {\r\n                                    text: 'Save',\r\n                                    class: 'btn-primary',\r\n                                    click: function(){\r\n                                        scope.$parent.saveItem();\r\n                                    }\r\n                                };\r\n                                break;\r\n                            case 'cancel':\r\n                                button = {\r\n                                    text: 'Cancel',\r\n                                    class: 'btn-default',\r\n                                    click: function(){\r\n                                        window.history.back();\r\n                                    }\r\n                                };\r\n                                break;\r\n                            default :\r\n                                button = {\r\n                                    text: 'Undefined',\r\n                                    class: 'btn-default'\r\n                                };\r\n                                break;\r\n                        }\r\n                        var mergedButton = angular.extend(button, aButton);\r\n\r\n                        scope.toolbarButtons.push(mergedButton);\r\n\r\n\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}]);","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\n\r\nangular.module('myApp.common').factory('PaginationService', [ '$http', function($http) {\r\n        function getPage(url, tableState, callback) {\r\n\r\n            var pagination = tableState.pagination;\r\n            if(pagination.number == undefined){\r\n                return false;\r\n            }\r\n\r\n            var start = pagination.start || 0;     // This is NOT the page number, but the index of item in the list that you want to use to display the table.\r\n            var number = pagination.number || 10;  // Number of entries showed per page.\r\n            var page = start / pagination.number + 1;\r\n\r\n            var searchParams = tableState.search.predicateObject;\r\n            var orderBy = tableState.sort.predicate;\r\n            var orderDir = tableState.sort.reverse?1:0;\r\n\r\n            var params = {\r\n                limit: number,\r\n                page: page,\r\n                filters: searchParams,\r\n                order: orderBy,\r\n                dir: orderDir\r\n            };\r\n\r\n            $http(\r\n                {\r\n                    url : url,\r\n                    method: 'GET',\r\n                    params: params\r\n                }\r\n            )\r\n            .success(function(result, status, headers, config) {\r\n\r\n                tableState.pagination.numberOfPages = result.last_page;//set the number of pages so the pagination can update\r\n\r\n                callback(result);\r\n\r\n            })\r\n            .error(function(data, status, headers, config) {\r\n\r\n            });\r\n\r\n        };\r\n        return {\r\n            getPage: getPage\r\n        };\r\n    }]\r\n);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('ProductListController', ['$scope', 'Product', '$http', function($scope, Product, $http) {\r\n    Product.query( {} ,function(products) {\r\n        console.log(products);\r\n        $scope.products = products;\r\n    }, function(error) {\r\n        console.log(error);\r\n    });\r\n\r\n}]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').factory('Product', ['$resource',\r\n    function($resource) {\r\n        return $resource('/product/:id', {id: '@id'},{\r\n                update: {\r\n                    method: 'PUT'\r\n                }\r\n            }\r\n        );\r\n    }]\r\n);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.category').controller('AdminCategoryAddController', ['$scope','$location', 'Category', 'toaster',\r\n    function($scope, $location, Category, toaster) {\r\n\r\n    $scope.buttons = [\r\n        {\r\n            name: 'save',\r\n            click: function(){\r\n                $scope.saveItem();\r\n            }\r\n        },\r\n        'cancel'\r\n    ];\r\n\r\n    $scope.category = new Category();\r\n\r\n    $scope.saveItem = function(){\r\n        $scope.category.$save({},\r\n            function(response){\r\n                toaster.pop('success', \"\", response.message);\r\n                $location.path('/admin/category');\r\n            },\r\n            function(response){\r\n                toaster.pop('error', \"\", response.message);\r\n                console.log(result);\r\n            }\r\n        );\r\n    };\r\n}\r\n]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.category').controller('AdminCategoryListController', ['$scope', function($scope) {\r\n\r\n    $scope.buttons = [\r\n        'add', {\r\n            name: 'delete',\r\n            click: function(){\r\n                $scope.deleteItems();\r\n            }\r\n        }\r\n    ];\r\n\r\n    $scope.gridCols = [\r\n        {title: 'Name', name: 'name', search: 'text'},\r\n        {title: 'Child Count', name: 'child_count', search: 'text'}\r\n    ];\r\n\r\n    $scope.deleteItems = function(){\r\n\r\n    }\r\n\r\n}]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('AdminProductAddController', ['$scope', function($scope) {\r\n\r\n\r\n\r\n    $scope.tinymceOptions = {\r\n        handle_event_callback: function (e) {\r\n            // put logic here for keypress\r\n        }\r\n    };\r\n\r\n}]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('AdminProductListController', ['$scope', function($scope) {\r\n\r\n    $scope.gridCols = [\r\n        {title: 'Name', name: 'name', search: 'text'},\r\n        {title: 'Price', name: 'price', search: 'text', format: 'currency'},\r\n        {title: 'Quantity', name: 'quantity', search: 'text'},\r\n        {title: 'Created At', name: 'created_at', format: 'date'},\r\n        {title: 'Status', name: 'status', format: 'status'}\r\n    ];\r\n\r\n}]);"],"sourceRoot":"/source/"}