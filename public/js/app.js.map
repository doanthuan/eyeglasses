{"version":3,"sources":["app.js","category/category.js","common/common.js","product/product.js","category/services/product-service.js","common/directives/grid.js","common/directives/pagination.js","common/directives/toolbar.js","common/services/pagination.js","product/controllers/product-list.controller.js","product/services/product-service.js","category/controllers/admin/admin-category-add.controller.js","category/controllers/admin/admin-category-list.controller.js","product/controllers/admin/admin-product-add.controller.js","product/controllers/admin/admin-product-list.controller.js"],"names":[],"mappings":"AAAA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnfile":"app.js","sourcesContent":["var app = angular.module('myApp', ['ui.bootstrap', 'ui.tinymce', 'myApp.common', 'myApp.product', 'myApp.category']);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.category', ['ngRoute', 'ngResource']);\r\n\r\nangular.module('myApp.category').config(['$routeProvider', function($routeProvider) {\r\n    $routeProvider\r\n        .when('/admin/category', {\r\n            controller: 'AdminCategoryListController',\r\n            templateUrl: 'templates/admin/categories/list.html'\r\n        })\r\n        .when('/admin/category/add', {\r\n            controller: 'AdminCategoryAddController',\r\n            templateUrl: 'templates/admin/categories/add.html'\r\n        })\r\n}]);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.common',['smart-table']);\r\n\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.product', ['ngRoute', 'ngResource']);\r\n\r\nangular.module('myApp.product').config(['$routeProvider', function($routeProvider) {\r\n    $routeProvider\r\n        .when('/', {\r\n            controller: 'ProductListController',\r\n            templateUrl: 'templates/products/list.html'\r\n        })\r\n        .when('/admin/product', {\r\n            controller: 'AdminProductListController',\r\n            templateUrl: 'templates/admin/products/list.html'\r\n        })\r\n        .when('/admin/product/add', {\r\n            controller: 'AdminProductAddController',\r\n            templateUrl: 'templates/admin/products/add.html'\r\n        })\r\n}]);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').factory('Product', ['$resource',\r\n    function($resource) {\r\n        return $resource('/product/:id', {id: '@id'},{\r\n                update: {\r\n                    method: 'PUT'\r\n                }\r\n            }\r\n        );\r\n    }]\r\n);\r\n\r\nangular.module('myApp.product').factory('ProductService', ['$q', '$filter', '$timeout' , 'Product', function($q, $filter, $timeout, Product) {\r\n            //fake call to the server, normally this service would serialize table state to send it to the server (with query parameters for example) and parse the response\r\n            //in our case, it actually performs the logic which would happened in the server\r\n            function getPage(start, number, params) {\r\n\r\n                var deferred = $q.defer();\r\n\r\n                var filtered = params.search.predicateObject ? $filter('filter')(randomsItems, params.search.predicateObject) : randomsItems;\r\n\r\n                if (params.sort.predicate) {\r\n                    filtered = $filter('orderBy')(filtered, params.sort.predicate, params.sort.reverse);\r\n                }\r\n\r\n                var result = filtered.slice(start, start + number);\r\n\r\n                $timeout(function () {\r\n                    //note, the server passes the information about the data set size\r\n                    deferred.resolve({\r\n                        data: result,\r\n                        numberOfPages: Math.ceil(1000 / number)\r\n                    });\r\n                }, 1500);\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            return {\r\n                getPage: getPage\r\n            };\r\n        }]\r\n);\r\n","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\nangular.module('myApp.common').directive('appGrid', ['PaginationService', function (PaginationService) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: '/templates/common/directives/grid.html',\r\n        scope: {\r\n            url: '@',\r\n            cols: '='\r\n        },\r\n        link: {\r\n            pre: function (scope, element, attrs, ctrl) {\r\n\r\n                scope.getPage = function(tableState) {\r\n\r\n                    scope.isLoading = true;\r\n\r\n                    PaginationService.getPage(scope.url, tableState, function(result){\r\n\r\n                        scope.items = result.data;\r\n\r\n                        scope.total = result.total;\r\n\r\n                        scope.isLoading = false;\r\n                    });\r\n\r\n                };\r\n            }\r\n        }\r\n    }\r\n}]);\r\n\r\nangular.module('myApp.common').filter('picker', function($filter) {\r\n    return function(value, filterName) {\r\n        if(filterName){\r\n            if(filterName == 'status'){\r\n                if(value == 1){\r\n                    return 'Enabled';\r\n                } else{\r\n                    return 'Disabled';\r\n                }\r\n            }\r\n            else{\r\n                return $filter(filterName)(value);\r\n            }\r\n        }\r\n        else{\r\n            return value;\r\n        }\r\n    };\r\n});","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\n\r\nangular.module('myApp.common').directive('appPagination', function () {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            'total': '='\r\n        },\r\n        templateUrl: '/templates/common/directives/pagination.html',\r\n        link: function (scope, elem, attrs) {\r\n\r\n        }\r\n    }\r\n});","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\nangular.module('myApp.common').directive('appToolbar', function () {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            'pageTitle': '@'\r\n        },\r\n        templateUrl: '/templates/common/directives/toolbar.html',\r\n        link: function (scope, elem, attrs) {\r\n\r\n        }\r\n    }\r\n});","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\n\r\nangular.module('myApp.common').factory('PaginationService', [ '$http', function($http) {\r\n        function getPage(url, tableState, callback) {\r\n\r\n            var pagination = tableState.pagination;\r\n            if(pagination.number == undefined){\r\n                return false;\r\n            }\r\n\r\n            var start = pagination.start || 0;     // This is NOT the page number, but the index of item in the list that you want to use to display the table.\r\n            var number = pagination.number || 10;  // Number of entries showed per page.\r\n            var page = start / pagination.number + 1;\r\n\r\n            var searchParams = tableState.search.predicateObject;\r\n            var orderBy = tableState.sort.predicate;\r\n            var orderDir = tableState.sort.reverse?1:0;\r\n\r\n            var params = {\r\n                limit: number,\r\n                page: page,\r\n                filters: searchParams,\r\n                order: orderBy,\r\n                dir: orderDir\r\n            };\r\n\r\n            $http(\r\n                {\r\n                    url : url,\r\n                    method: 'GET',\r\n                    params: params\r\n                }\r\n            )\r\n            .success(function(result, status, headers, config) {\r\n\r\n                tableState.pagination.numberOfPages = result.last_page;//set the number of pages so the pagination can update\r\n\r\n                callback(result);\r\n\r\n            })\r\n            .error(function(data, status, headers, config) {\r\n\r\n            });\r\n\r\n        };\r\n        return {\r\n            getPage: getPage\r\n        };\r\n    }]\r\n);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('ProductListController', ['$scope', 'Product', '$http', function($scope, Product, $http) {\r\n    Product.query( {} ,function(products) {\r\n        console.log(products);\r\n        $scope.products = products;\r\n    }, function(error) {\r\n        console.log(error);\r\n    });\r\n\r\n}]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').factory('Product', ['$resource',\r\n    function($resource) {\r\n        return $resource('/product/:id', {id: '@id'},{\r\n                update: {\r\n                    method: 'PUT'\r\n                }\r\n            }\r\n        );\r\n    }]\r\n);\r\n\r\nangular.module('myApp.product').factory('ProductService', ['$q', '$filter', '$timeout' , 'Product', function($q, $filter, $timeout, Product) {\r\n            //fake call to the server, normally this service would serialize table state to send it to the server (with query parameters for example) and parse the response\r\n            //in our case, it actually performs the logic which would happened in the server\r\n            function getPage(start, number, params) {\r\n\r\n                var deferred = $q.defer();\r\n\r\n                var filtered = params.search.predicateObject ? $filter('filter')(randomsItems, params.search.predicateObject) : randomsItems;\r\n\r\n                if (params.sort.predicate) {\r\n                    filtered = $filter('orderBy')(filtered, params.sort.predicate, params.sort.reverse);\r\n                }\r\n\r\n                var result = filtered.slice(start, start + number);\r\n\r\n                $timeout(function () {\r\n                    //note, the server passes the information about the data set size\r\n                    deferred.resolve({\r\n                        data: result,\r\n                        numberOfPages: Math.ceil(1000 / number)\r\n                    });\r\n                }, 1500);\r\n\r\n                return deferred.promise;\r\n            }\r\n\r\n            return {\r\n                getPage: getPage\r\n            };\r\n        }]\r\n);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('AdminProductAddController', ['$scope', function($scope) {\r\n\r\n    $scope.tinymceOptions = {\r\n        handle_event_callback: function (e) {\r\n            // put logic here for keypress\r\n        }\r\n    };\r\n\r\n}]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.category').controller('AdminCategoryListController', ['$scope', function($scope) {\r\n\r\n    $scope.gridCols = [\r\n        {title: 'Name', name: 'name', search: 'text'},\r\n        {title: 'Child Count', name: 'child_count', search: 'text'}\r\n    ];\r\n\r\n}]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('AdminProductAddController', ['$scope', function($scope) {\r\n\r\n    $scope.tinymceOptions = {\r\n        handle_event_callback: function (e) {\r\n            // put logic here for keypress\r\n        }\r\n    };\r\n\r\n}]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('AdminProductListController', ['$scope', function($scope) {\r\n\r\n    $scope.gridCols = [\r\n        {title: 'Name', name: 'name', search: 'text'},\r\n        {title: 'Price', name: 'price', search: 'text', format: 'currency'},\r\n        {title: 'Quantity', name: 'quantity', search: 'text'},\r\n        {title: 'Created At', name: 'created_at', format: 'date'},\r\n        {title: 'Status', name: 'status', format: 'status'}\r\n    ];\r\n\r\n}]);"],"sourceRoot":"/source/"}