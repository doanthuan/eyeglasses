{"version":3,"sources":["app.js","HomeController.js","category/category.js","common/common.js","product/product.js","product/controllers/product-list.controller.js","common/directives/grid.js","common/directives/pagination.js","common/directives/spinner.js","common/directives/toolbar.js","category/controllers/admin/admin-category-add.controller.js","category/controllers/admin/admin-category-list.controller.js","product/controllers/admin/admin-product-add.controller.js","product/controllers/admin/admin-product-list.controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["var app = angular.module('myApp', [\r\n    'ngAnimate',\r\n    'ui.router',\r\n    'ui.bootstrap',\r\n    'ui.tinymce',\r\n    'toaster',\r\n    'ngFileUpload',\r\n    'myApp.common',\r\n    'myApp.product',\r\n    'myApp.category'\r\n]);\r\n\r\nangular.module('myApp').config(['$stateProvider', '$urlRouterProvider',\r\n    function($stateProvider, $urlRouterProvider) {\r\n\r\n        // For any unmatched url, redirect to /\r\n        $urlRouterProvider.otherwise(\"/\");\r\n\r\n        // Now set up the states\r\n        $stateProvider\r\n            .state('admin', {\r\n                url: \"/admin\",\r\n                templateUrl: \"admin.html\"\r\n            })\r\n            .state('front', {\r\n                templateUrl: \"front.html\"\r\n            })\r\n            .state('front.home', {\r\n                url: \"/\",\r\n                controller: 'HomeController',\r\n                templateUrl: \"templates/front/home.html\"\r\n            })\r\n        ;\r\n\r\n\r\n    }]);\r\n\r\n","/**\r\n * Created by doanthuan on 4/28/2015.\r\n */\r\nangular.module('myApp').controller('HomeController', ['$scope', function($scope) {\r\n\r\n    $scope.myInterval = 5000;\r\n    var slides = $scope.slides = [];\r\n    $scope.addSlide = function(i) {\r\n        slides.push({\r\n            image: '/images/banner'+i+'.jpg',\r\n            text: ''\r\n        });\r\n    };\r\n    for (var i=1; i<4; i++) {\r\n        $scope.addSlide(i);\r\n    }\r\n\r\n}]);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.category', []);\r\n\r\nangular.module('myApp.category').config(['$stateProvider', function($stateProvider) {\r\n\r\n    $stateProvider\r\n        .state('admin.category', {\r\n            url: \"/category\",\r\n            controller: 'AdminCategoryListController',\r\n            templateUrl: 'templates/admin/categories/list.html'\r\n        })\r\n        .state('admin.category-add', {\r\n            url: \"/category/add/{id}\",\r\n            templateUrl: 'templates/admin/categories/add.html',\r\n            controller: 'AdminCategoryAddController'\r\n        })\r\n    ;\r\n}]);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.common',['smart-table', 'restangular']);\r\n\r\nangular.module('myApp.common').config(function(RestangularProvider) {\r\n\r\n    // add a response intereceptor\r\n    RestangularProvider.addResponseInterceptor(function(data, operation, what, url, response, deferred) {\r\n        var extractedData;\r\n        // .. to look for getList operations\r\n        switch(operation)\r\n        {\r\n            case \"getList\":\r\n                extractedData = data.data;\r\n\r\n                extractedData.last_page = data.last_page;//set the number of pages so the pagination can update\r\n\r\n                extractedData.total = data.total;\r\n\r\n                break;\r\n\r\n            default:\r\n                extractedData = data;\r\n                break;\r\n        }\r\n\r\n        return extractedData;\r\n    });\r\n\r\n    RestangularProvider.setRequestInterceptor(function(elem, operation) {\r\n        if (operation === \"remove\") {\r\n            return null;\r\n        }\r\n        return elem;\r\n    });\r\n\r\n    RestangularProvider.configuration.getIdFromElem = function(elem) {\r\n        // if route is customers ==> returns customerID\r\n        if(elem.route == \"category\"){\r\n            return elem[\"category_id\"];\r\n        }\r\n    }\r\n\r\n});","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.product', []);\r\n\r\nangular.module('myApp.product').config(['$stateProvider', '$urlRouterProvider',\r\n    function($stateProvider, $urlRouterProvider) {\r\n\r\n    // Now set up the states\r\n    $stateProvider\r\n        .state('admin.product', {\r\n            url: \"/product\",\r\n            controller: 'AdminProductListController',\r\n            templateUrl: 'templates/admin/products/list.html'\r\n        })\r\n        .state('admin.product-add', {\r\n            url: \"/product/add/{id}\",\r\n            controller: 'AdminProductAddController',\r\n            templateUrl: 'templates/admin/products/add.html'\r\n        })\r\n        .state('front.product', {\r\n            url: \"/products\",\r\n            controller: 'ProductListController',\r\n            templateUrl: 'templates/products/list.html'\r\n        })\r\n    ;\r\n\r\n\r\n}]);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('ProductListController', ['$scope', 'Restangular',\r\n    function($scope, Restangular) {\r\n\r\n    $scope.isLoading = true;\r\n    Restangular.all('product').getList().then(function(items) {\r\n\r\n        $scope.items = items;\r\n\r\n        $scope.total = items.total;\r\n\r\n        $scope.isLoading = false;\r\n    });\r\n\r\n}]);","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\nangular.module('myApp.common').directive('appGrid', ['Restangular', 'toaster', '$location', '$state',\r\n    function (Restangular, toaster, $location, $state) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: '/templates/common/directives/grid.html',\r\n        scope: {\r\n            url: '@',\r\n            cols: '=',\r\n            items: '=',\r\n            itemKey: '@'\r\n        },\r\n        controller: function($scope, $element){\r\n            $scope.getPage = function (tableState) {\r\n\r\n                $scope.isLoading = true;\r\n\r\n                var pagination = tableState.pagination;\r\n                if(pagination.number == undefined){\r\n                    return false;\r\n                }\r\n\r\n                var start = pagination.start || 0;     // This is NOT the page number, but the index of item in the list that you want to use to display the table.\r\n                var number = pagination.number || 10;  // Number of entries showed per page.\r\n                var page = start / pagination.number + 1;\r\n\r\n                var searchParams = tableState.search.predicateObject;\r\n                var orderBy = tableState.sort.predicate;\r\n                var orderDir = tableState.sort.reverse?1:0;\r\n\r\n                var params = {\r\n                    limit: number,\r\n                    page: page,\r\n                    filters: searchParams,\r\n                    order: orderBy,\r\n                    dir: orderDir\r\n                };\r\n\r\n                Restangular.all($scope.url).getList(params).then(function(items) {\r\n\r\n                    tableState.pagination.numberOfPages = items.last_page;//set the number of pages so the pagination can update\r\n\r\n                    $scope.items = items;\r\n\r\n                    $scope.total = items.total;\r\n\r\n                    $scope.isLoading = false;\r\n                });\r\n\r\n\r\n            };\r\n\r\n            $scope.checkAll = function(){\r\n                angular.forEach($scope.items, function (item) {\r\n                    item.selected = !$scope.selectedAll;\r\n                });\r\n            }\r\n\r\n            $scope.editItem = function(item){\r\n                var curUrl = $location.path();\r\n                $location.path(curUrl + '/add/'+ item[$scope.itemKey]);\r\n            }\r\n\r\n            $scope.deleteItems = function(){\r\n\r\n                $scope.isLoading = true;\r\n\r\n                var deletedIds = [];\r\n                var deletedItems = [];\r\n                angular.forEach($scope.items, function (item) {\r\n                    if(item.selected){\r\n                        deletedIds.push(item[$scope.itemKey]);\r\n                        deletedItems.push(item);\r\n                    }\r\n                });\r\n\r\n                Restangular.all($scope.url + '/delete').post({'cid': deletedIds}).then(\r\n                    function(response){\r\n                        angular.forEach(deletedItems, function (item) {\r\n                            var index = $scope.items.indexOf(item);\r\n                            $scope.items.splice(index, 1);\r\n                        });\r\n\r\n                        if($scope.items.length == 0){\r\n                            $state.reload();\r\n                        }\r\n\r\n                        $scope.isLoading = false;\r\n\r\n                        toaster.pop('success', \"\", response.message);\r\n                    },\r\n                    function(response){\r\n                        $scope.isLoading = false;\r\n\r\n                        toaster.pop('error', \"\", response.data.message);\r\n                    }\r\n                );\r\n\r\n            }\r\n\r\n            $scope.$parent.$on('delete_item', function(e, data){\r\n                $scope.deleteItems();\r\n            });\r\n        }\r\n    }\r\n}]);\r\n\r\nangular.module('myApp.common').filter('picker', function($filter) {\r\n    return function(value, filterName) {\r\n        if(filterName){\r\n            if(filterName == 'status'){\r\n                if(value == 1){\r\n                    return 'Enabled';\r\n                } else{\r\n                    return 'Disabled';\r\n                }\r\n            }\r\n            else{\r\n                return $filter(filterName)(value);\r\n            }\r\n        }\r\n        else{\r\n            return value;\r\n        }\r\n    };\r\n});","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\n\r\nangular.module('myApp.common').directive('appPagination', function () {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            'total': '='\r\n        },\r\n        templateUrl: '/templates/common/directives/pagination.html',\r\n        link: function (scope, elem, attrs) {\r\n\r\n        }\r\n    }\r\n});","/**\r\n * Created by doanthuan on 4/18/2015.\r\n */\r\nangular.module('myApp.common').directive('appSpinner', function () {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<div class=\"app-spinner\">' +\r\n        '<span class=\"fa fa-spinner fa-spin\"></span>' +\r\n        '</div>'\r\n    };\r\n});","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\nangular.module('myApp.common').directive('appToolbar', ['$location', function ($location) {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            'pageTitle': '@',\r\n            'buttons': '='\r\n        },\r\n        templateUrl: '/templates/common/directives/toolbar.html',\r\n        controller: function($scope, $element){\r\n            $scope.initButtons = function(){\r\n                $scope.toolbarButtons = [];\r\n                if($scope.buttons){\r\n                    $scope.buttons.forEach(function(aButton){\r\n\r\n                        if(typeof aButton == 'string'){\r\n                            aButton = {name:aButton};\r\n                        }\r\n                        var buttonName = aButton.name;\r\n\r\n                        var button = null;\r\n                        switch(buttonName){\r\n                            case 'add':\r\n                                button = {\r\n                                    text: 'Add New',\r\n                                    class: 'btn-success',\r\n                                    icon: 'glyphicon glyphicon-plus',\r\n                                    click: function(){\r\n                                        var curUrl = $location.path();\r\n                                        $location.path(curUrl + '/add');\r\n                                    }\r\n                                };\r\n                                break;\r\n                            case 'delete':\r\n                                button = {\r\n                                    text: 'Delete',\r\n                                    class: 'btn-danger',\r\n                                    icon: 'glyphicon glyphicon-remove',\r\n                                    click: function(){\r\n                                        $scope.$parent.$emit('delete_item');\r\n                                    }\r\n                                };\r\n                                break;\r\n                            case 'save':\r\n                                button = {\r\n                                    text: 'Save',\r\n                                    class: 'btn-primary',\r\n                                    click: function(){\r\n                                        $scope.$parent.$emit('save_item');\r\n                                    }\r\n                                };\r\n                                break;\r\n                            case 'cancel':\r\n                                button = {\r\n                                    text: 'Cancel',\r\n                                    class: 'btn-default',\r\n                                    click: function(){\r\n                                        window.history.back();\r\n                                    }\r\n                                };\r\n                                break;\r\n                            default :\r\n                                button = {\r\n                                    text: 'Undefined',\r\n                                    class: 'btn-default'\r\n                                };\r\n                                break;\r\n                        }\r\n                        var mergedButton = angular.extend(button, aButton);\r\n\r\n                        $scope.toolbarButtons.push(mergedButton);\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            $scope.initButtons();\r\n\r\n        }\r\n    }\r\n}]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.category').controller('AdminCategoryAddController',\r\n    ['$scope','$location', 'toaster', 'Restangular', '$stateParams',\r\n    function($scope, $location, toaster, Restangular, $stateParams) {\r\n\r\n    $scope.cancel = function(){\r\n        $location.path('/admin/category');\r\n    }\r\n\r\n    $scope.save = function(){\r\n        $scope.isSaving = true;\r\n        Restangular.all('category').post($scope.category).then(\r\n            function(response){\r\n                toaster.pop('success', \"\", response.message);\r\n                $location.path('/admin/category');\r\n                $scope.isSaving = false;\r\n            },\r\n            function(error){\r\n                toaster.pop('error', \"\", error.data.message);\r\n                $scope.isSaving = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    if($stateParams.id){\r\n        $scope.isEdit = true;\r\n        Restangular.one('category', $stateParams.id).get().then(function(response){\r\n            $scope.category = response;\r\n        });\r\n\r\n    }else{\r\n        $scope.isEdit = false;\r\n        $scope.category = {};\r\n    }\r\n\r\n}\r\n]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.category').controller('AdminCategoryListController', ['$scope', 'Restangular', 'toaster', '$location',\r\n    function($scope, Restangular, toaster, $location) {\r\n\r\n    $scope.add = function(){\r\n        $location.path('/admin/category/add/');\r\n    };\r\n\r\n    $scope.remove = function(){\r\n        //emit delete event to grid\r\n        $scope.$emit('delete_item');\r\n    };\r\n\r\n    $scope.gridCols = [\r\n        {title: 'Name', name: 'name', search: 'text'},\r\n        {title: 'Child Count', name: 'child_count', search: 'text'}\r\n    ];\r\n\r\n    $scope.categories = null;\r\n\r\n\r\n}]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('AdminProductAddController',\r\n    ['$scope','$location', 'toaster', 'Restangular', '$stateParams', 'Upload',\r\n        function($scope, $location, toaster, Restangular, $stateParams, Upload) {\r\n\r\n    $scope.cancel = function(){\r\n        $location.path('/admin/product');\r\n    }\r\n\r\n    $scope.save = function(){\r\n        $scope.isSaving = true;\r\n\r\n        $scope.product.images = $scope.images;\r\n\r\n        Restangular.all('product').post($scope.product).then(\r\n            function(response){\r\n                toaster.pop('success', \"\", response.message);\r\n                $location.path('/admin/product');\r\n                $scope.isSaving = false;\r\n            },\r\n            function(error){\r\n                toaster.pop('error', \"\", error.data.message);\r\n                $scope.isSaving = false;\r\n            }\r\n        );\r\n    };\r\n\r\n    if($stateParams.id){\r\n        $scope.isEdit = true;\r\n        Restangular.one('product', $stateParams.id).get().then(function(response){\r\n            $scope.product = response;\r\n        });\r\n\r\n    }else{\r\n        $scope.isEdit = false;\r\n        $scope.product = {};\r\n    }\r\n\r\n\r\n    $scope.tinymceOptions = {\r\n        handle_event_callback: function (e) {\r\n            // put logic here for keypress\r\n        }\r\n    };\r\n\r\n    $scope.$watch('images', function () {\r\n        $scope.upload($scope.images);\r\n    });\r\n\r\n    $scope.upload = function (files) {\r\n        if (files && files.length) {\r\n            for (var i = 0; i < files.length; i++) {\r\n                var file = files[i];\r\n                Upload.upload({\r\n                    url: 'media/upload',\r\n                    fields: {'username': $scope.username},\r\n                    file: file\r\n                }).progress(function (evt) {\r\n                    var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\r\n                    console.log('progress: ' + progressPercentage + '% ' + evt.config.file.name);\r\n                }).success(function (data, status, headers, config) {\r\n                    file.media_id = data;\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n}]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('AdminProductListController', ['$scope', 'Restangular', 'toaster', '$location',\r\n    function($scope, Restangular, toaster, $location) {\r\n\r\n    $scope.add = function(){\r\n        $location.path('/admin/product/add/');\r\n    };\r\n\r\n    $scope.remove = function(){\r\n        //emit delete event to grid\r\n        $scope.$emit('delete_item');\r\n    };\r\n\r\n    $scope.gridCols = [\r\n        {title: 'Name', name: 'name', search: 'text'},\r\n        {title: 'Price', name: 'price', search: 'text', format: 'currency'},\r\n        {title: 'Quantity', name: 'quantity', search: 'text'},\r\n        {title: 'Created At', name: 'created_at', format: 'date'},\r\n        {title: 'Status', name: 'status', format: 'status'}\r\n        ];\r\n\r\n    $scope.products = null;\r\n\r\n}]);"],"sourceRoot":"/source/"}