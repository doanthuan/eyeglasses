{"version":3,"sources":["app.js","product/product.js","category/category.js","common/common.js","product/controllers/product-list.controller.js","product/services/product-service.js","category/services/category-service.js","common/directives/grid.js","common/directives/pagination.js","common/directives/spinner.js","common/directives/toolbar.js","product/controllers/admin/admin-product-add.controller.js","product/controllers/admin/admin-product-list.controller.js","category/controllers/admin/admin-category-add.controller.js","category/controllers/admin/admin-category-list.controller.js"],"names":[],"mappings":"AAAA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["var app = angular.module('myApp', ['ngRoute', 'ngResource','ngAnimate','ui.bootstrap','ui.tinymce','toaster','myApp.common','myApp.product','myApp.category']);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.product', []);\r\n\r\nangular.module('myApp.product').config(['$routeProvider', function($routeProvider) {\r\n    $routeProvider\r\n        .when('/', {\r\n            controller: 'ProductListController',\r\n            templateUrl: 'templates/products/list.html'\r\n        })\r\n        .when('/admin/product', {\r\n            controller: 'AdminProductListController',\r\n            templateUrl: 'templates/admin/products/list.html'\r\n        })\r\n        .when('/admin/product/add', {\r\n            controller: 'AdminProductAddController',\r\n            templateUrl: 'templates/admin/products/add.html'\r\n        })\r\n}]);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.category', []);\r\n\r\nangular.module('myApp.category').config(['$routeProvider', function($routeProvider) {\r\n    $routeProvider\r\n        .when('/admin/category', {\r\n            controller: 'AdminCategoryListController',\r\n            templateUrl: 'templates/admin/categories/list.html'\r\n        })\r\n        .when('/admin/category/add/:id?', {\r\n            templateUrl: 'templates/admin/categories/add.html',\r\n            controller: 'AdminCategoryAddController'\r\n        })\r\n}]);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.common',['smart-table', 'restangular']);\r\n\r\nangular.module('myApp.common').config(function(RestangularProvider) {\r\n\r\n    // add a response intereceptor\r\n    RestangularProvider.addResponseInterceptor(function(data, operation, what, url, response, deferred) {\r\n        var extractedData;\r\n        // .. to look for getList operations\r\n        switch(operation)\r\n        {\r\n            case \"getList\":\r\n                extractedData = data.data;\r\n\r\n                extractedData.last_page = data.last_page;//set the number of pages so the pagination can update\r\n\r\n                extractedData.total = data.total;\r\n\r\n                break;\r\n\r\n            default:\r\n                extractedData = data;\r\n                break;\r\n        }\r\n\r\n        return extractedData;\r\n    });\r\n\r\n    RestangularProvider.setRequestInterceptor(function(elem, operation) {\r\n        if (operation === \"remove\") {\r\n            return null;\r\n        }\r\n        return elem;\r\n    });\r\n\r\n    RestangularProvider.configuration.getIdFromElem = function(elem) {\r\n        // if route is customers ==> returns customerID\r\n        if(elem.route == \"category\"){\r\n            return elem[\"category_id\"];\r\n        }\r\n    }\r\n\r\n});","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('ProductListController', ['$scope', 'Product', '$http', function($scope, Product, $http) {\r\n    Product.query( {} ,function(products) {\r\n        console.log(products);\r\n        $scope.products = products;\r\n    }, function(error) {\r\n        console.log(error);\r\n    });\r\n\r\n}]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').factory('Product', ['$resource',\r\n    function($resource) {\r\n        return $resource('/product/:id', {id: '@id'},{\r\n                update: {\r\n                    method: 'PUT'\r\n                }\r\n            }\r\n        );\r\n    }]\r\n);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.category').factory('Category', ['$resource',\r\n    function($resource) {\r\n        return $resource('/category/:id', {id: '@id'},{\r\n                query:  {method:'GET', isArray:false,\r\n                    transformResponse: function(data, header) {\r\n                        var jsonData = JSON.parse(data); //or angular.fromJson(data)\r\n                        var items = [];\r\n\r\n                        angular.forEach(jsonData.data, function(item){\r\n                            var category = new this;\r\n                            category.category_id = item.category_id;\r\n                            category.name = item.name;\r\n                            category.child_count = item.child_count;\r\n                            items.push(category);\r\n                        });\r\n                        return items;\r\n                    }\r\n                },\r\n                update: {method: 'PUT'}\r\n            }\r\n        );\r\n    }]\r\n);\r\n","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\nangular.module('myApp.common').directive('appGrid', ['Restangular', 'toaster', '$location', '$route',\r\n    function (Restangular, toaster, $location, $route) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: '/templates/common/directives/grid.html',\r\n        scope: {\r\n            url: '@',\r\n            cols: '=',\r\n            items: '='\r\n        },\r\n        controller: function($scope, $element){\r\n            $scope.getPage = function (tableState) {\r\n\r\n                $scope.isLoading = true;\r\n\r\n                var pagination = tableState.pagination;\r\n                if(pagination.number == undefined){\r\n                    return false;\r\n                }\r\n\r\n                var start = pagination.start || 0;     // This is NOT the page number, but the index of item in the list that you want to use to display the table.\r\n                var number = pagination.number || 10;  // Number of entries showed per page.\r\n                var page = start / pagination.number + 1;\r\n\r\n                var searchParams = tableState.search.predicateObject;\r\n                var orderBy = tableState.sort.predicate;\r\n                var orderDir = tableState.sort.reverse?1:0;\r\n\r\n                var params = {\r\n                    limit: number,\r\n                    page: page,\r\n                    filters: searchParams,\r\n                    order: orderBy,\r\n                    dir: orderDir\r\n                };\r\n\r\n                Restangular.all($scope.url).getList(params).then(function(items) {\r\n\r\n                    tableState.pagination.numberOfPages = items.last_page;//set the number of pages so the pagination can update\r\n\r\n                    $scope.items = items;\r\n\r\n                    $scope.total = items.total;\r\n\r\n                    $scope.isLoading = false;\r\n                });\r\n\r\n\r\n            };\r\n\r\n            $scope.checkAll = function(){\r\n                angular.forEach($scope.items, function (item) {\r\n                    item.selected = !$scope.selectedAll;\r\n                });\r\n            }\r\n\r\n            $scope.editItem = function(item){\r\n                $scope.$parent.editItem(item);\r\n            }\r\n\r\n            $scope.deleteItems = function(){\r\n\r\n                $scope.isLoading = true;\r\n\r\n                var deletedIds = [];\r\n                var deletedItems = [];\r\n                angular.forEach($scope.items, function (item) {\r\n                    if(item.selected){\r\n                        deletedIds.push(item.category_id);\r\n                        deletedItems.push(item);\r\n                    }\r\n                });\r\n\r\n                Restangular.all($scope.url + '/delete').post({'cid': deletedIds}).then(\r\n                    function(response){\r\n                        angular.forEach(deletedItems, function (item) {\r\n                            var index = $scope.items.indexOf(item);\r\n                            $scope.items.splice(index, 1);\r\n                        });\r\n\r\n                        if($scope.items.length == 0){\r\n                            $route.reload();\r\n                        }\r\n\r\n                        $scope.isLoading = false;\r\n\r\n                        toaster.pop('success', \"\", response.message);\r\n                    },\r\n                    function(response){\r\n                        $scope.isLoading = false;\r\n\r\n                        toaster.pop('error', \"\", response.data.message);\r\n                    }\r\n                );\r\n\r\n            }\r\n\r\n            $scope.$parent.$on('delete_item', function(e, data){\r\n                $scope.deleteItems();\r\n            });\r\n        }\r\n    }\r\n}]);\r\n\r\nangular.module('myApp.common').filter('picker', function($filter) {\r\n    return function(value, filterName) {\r\n        if(filterName){\r\n            if(filterName == 'status'){\r\n                if(value == 1){\r\n                    return 'Enabled';\r\n                } else{\r\n                    return 'Disabled';\r\n                }\r\n            }\r\n            else{\r\n                return $filter(filterName)(value);\r\n            }\r\n        }\r\n        else{\r\n            return value;\r\n        }\r\n    };\r\n});","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\n\r\nangular.module('myApp.common').directive('appPagination', function () {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            'total': '='\r\n        },\r\n        templateUrl: '/templates/common/directives/pagination.html',\r\n        link: function (scope, elem, attrs) {\r\n\r\n        }\r\n    }\r\n});","/**\r\n * Created by doanthuan on 4/18/2015.\r\n */\r\nangular.module('myApp.common').directive('appSpinner', function () {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<div class=\"app-spinner\">' +\r\n        '<span class=\"fa fa-spinner fa-spin\"></span>' +\r\n        '</div>'\r\n    };\r\n});","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\nangular.module('myApp.common').directive('appToolbar', ['$location', function ($location) {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            'pageTitle': '@',\r\n            'buttons': '='\r\n        },\r\n        templateUrl: '/templates/common/directives/toolbar.html',\r\n        controller: function($scope, $element){\r\n            $scope.initButtons = function(){\r\n                $scope.toolbarButtons = [];\r\n                if($scope.buttons){\r\n                    $scope.buttons.forEach(function(aButton){\r\n\r\n                        if(typeof aButton == 'string'){\r\n                            aButton = {name:aButton};\r\n                        }\r\n                        var buttonName = aButton.name;\r\n\r\n                        var button = null;\r\n                        switch(buttonName){\r\n                            case 'add':\r\n                                button = {\r\n                                    text: 'Add New',\r\n                                    class: 'btn-success',\r\n                                    icon: 'glyphicon glyphicon-plus',\r\n                                    click: function(){\r\n                                        var curUrl = $location.path();\r\n                                        $location.path(curUrl + '/add');\r\n                                    }\r\n                                };\r\n                                break;\r\n                            case 'delete':\r\n                                button = {\r\n                                    text: 'Delete',\r\n                                    class: 'btn-danger',\r\n                                    icon: 'glyphicon glyphicon-remove',\r\n                                    click: function(){\r\n                                        $scope.$parent.$emit('delete_item');\r\n                                    }\r\n                                };\r\n                                break;\r\n                            case 'save':\r\n                                button = {\r\n                                    text: 'Save',\r\n                                    class: 'btn-primary',\r\n                                    click: function(){\r\n                                        $scope.$parent.$emit('save_item');\r\n                                    }\r\n                                };\r\n                                break;\r\n                            case 'cancel':\r\n                                button = {\r\n                                    text: 'Cancel',\r\n                                    class: 'btn-default',\r\n                                    click: function(){\r\n                                        window.history.back();\r\n                                    }\r\n                                };\r\n                                break;\r\n                            default :\r\n                                button = {\r\n                                    text: 'Undefined',\r\n                                    class: 'btn-default'\r\n                                };\r\n                                break;\r\n                        }\r\n                        var mergedButton = angular.extend(button, aButton);\r\n\r\n                        $scope.toolbarButtons.push(mergedButton);\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            $scope.initButtons();\r\n\r\n        }\r\n    }\r\n}]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('AdminProductAddController', ['$scope', function($scope) {\r\n\r\n\r\n\r\n    $scope.tinymceOptions = {\r\n        handle_event_callback: function (e) {\r\n            // put logic here for keypress\r\n        }\r\n    };\r\n\r\n}]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('AdminProductListController', ['$scope', function($scope) {\r\n\r\n    $scope.gridCols = [\r\n        {title: 'Name', name: 'name', search: 'text'},\r\n        {title: 'Price', name: 'price', search: 'text', format: 'currency'},\r\n        {title: 'Quantity', name: 'quantity', search: 'text'},\r\n        {title: 'Created At', name: 'created_at', format: 'date'},\r\n        {title: 'Status', name: 'status', format: 'status'}\r\n    ];\r\n\r\n}]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.category').controller('AdminCategoryAddController', ['$scope','$location', 'toaster', 'Restangular', '$routeParams',\r\n    function($scope, $location, toaster, Restangular, $routeParams) {\r\n\r\n    $scope.cancel = function(){\r\n        $location.path('/admin/category');\r\n    }\r\n\r\n    $scope.save = function(){\r\n        Restangular.all('category').post($scope.category).then(function(response){\r\n            toaster.pop('success', \"\", response.message);\r\n            $location.path('/admin/category');\r\n        });\r\n    }\r\n\r\n    if($routeParams.id){\r\n        $scope.isEdit = true;\r\n        Restangular.one('category', $routeParams.id).get().then(function(response){\r\n            $scope.category = response;\r\n        });\r\n\r\n    }else{\r\n        $scope.isEdit = false;\r\n        $scope.category = {};\r\n    }\r\n\r\n}\r\n]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.category').controller('AdminCategoryListController', ['$scope', 'Restangular', 'toaster', '$location',\r\n    function($scope, Restangular, toaster, $location) {\r\n\r\n    $scope.add = function(){\r\n        $location.path('/admin/category/add');\r\n    };\r\n\r\n    $scope.editItem = function(item){\r\n        var curUrl = $location.path();\r\n        $location.path(curUrl + '/add/'+item.id);\r\n    };\r\n\r\n    $scope.remove = function(){\r\n        //emit delete event to grid\r\n        $scope.$emit('delete_item');\r\n    };\r\n\r\n    $scope.editItem = function(item){\r\n        var curUrl = $location.path();\r\n        $location.path(curUrl + '/add/'+item.category_id);\r\n    };\r\n\r\n    $scope.gridCols = [\r\n        {title: 'Name', name: 'name', search: 'text'},\r\n        {title: 'Child Count', name: 'child_count', search: 'text'}\r\n    ];\r\n\r\n    $scope.categories = null;\r\n\r\n\r\n}]);"],"sourceRoot":"/source/"}