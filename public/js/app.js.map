{"version":3,"sources":["brand/brand.js","category/category.js","checkout/checkout.js","common/common.js","main/main.js","product/product.js","checkout/controllers/cart.controller.js","checkout/controllers/checkout.controller.js","checkout/service/cart.js","checkout/service/checkout.js","common/directives/grid.js","common/directives/pagination.js","common/directives/spinner.js","common/directives/toolbar.js","main/controllers/HomeController.js","main/controllers/MainController.js","product/controllers/product-list.controller.js","product/controllers/product-view.controller.js","product/services/product.js","brand/controllers/admin/admin-brand-add.controller.js","brand/controllers/admin/admin-brand-list.controller.js","category/controllers/admin/admin-category-add.controller.js","category/controllers/admin/admin-category-list.controller.js","checkout/controllers/admin/admin-order-list.controller.js","checkout/controllers/admin/admin-order-view.controller.js","product/controllers/admin/admin-product-add.controller.js","product/controllers/admin/admin-product-list.controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxtnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACffile":"app.js","sourcesContent":["/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.brand', []);\r\n\r\nangular.module('myApp.brand').config(['$stateProvider', function($stateProvider) {\r\n\r\n    $stateProvider\r\n        .state('admin.brand', {\r\n            url: \"/brand\",\r\n            controller: 'AdminBrandListController',\r\n            templateUrl: 'templates/admin/brands/list.html'\r\n        })\r\n        .state('admin.brand-add', {\r\n            url: \"/brand/add/{id}\",\r\n            templateUrl: 'templates/admin/brands/add.html',\r\n            controller: 'AdminBrandAddController'\r\n        })\r\n    ;\r\n}]);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.category', []);\r\n\r\nangular.module('myApp.category').config(['$stateProvider', function($stateProvider) {\r\n\r\n    $stateProvider\r\n        .state('admin.category', {\r\n            url: \"/category\",\r\n            controller: 'AdminCategoryListController',\r\n            templateUrl: 'templates/admin/categories/list.html'\r\n        })\r\n        .state('admin.category-add', {\r\n            url: \"/category/add/{id}\",\r\n            templateUrl: 'templates/admin/categories/add.html',\r\n            controller: 'AdminCategoryAddController'\r\n        })\r\n    ;\r\n}]);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.checkout', []);\r\n\r\nangular.module('myApp.checkout').config(['$stateProvider', '$urlRouterProvider',\r\n    function($stateProvider, $urlRouterProvider) {\r\n\r\n    // Now set up the states\r\n    $stateProvider\r\n        .state('front.cart', {\r\n            url: \"/cart\",\r\n            controller: 'CartController',\r\n            templateUrl: 'templates/checkout/cart.html'\r\n        })\r\n        .state('front.checkout', {\r\n            url: \"/checkout\",\r\n            controller: 'CheckoutController',\r\n            templateUrl: 'templates/checkout/checkout.html'\r\n        })\r\n        .state('admin.order', {\r\n            url: \"/order\",\r\n            controller: 'AdminOrderListController',\r\n            templateUrl: 'templates/admin/orders/list.html'\r\n        })\r\n        .state('admin.order-view', {\r\n            url: \"/order/view/{id}\",\r\n            templateUrl: 'templates/admin/orders/view.html',\r\n            controller: 'AdminOrderViewController'\r\n        })\r\n\r\n    ;\r\n\r\n\r\n}]);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.common',['smart-table', 'restangular']);\r\n\r\nangular.module('myApp.common').config(function(RestangularProvider) {\r\n\r\n    // add a response intereceptor\r\n    RestangularProvider.addResponseInterceptor(function(data, operation, what, url, response, deferred) {\r\n        var extractedData;\r\n        // .. to look for getList operations\r\n        switch(operation)\r\n        {\r\n            case \"getList\":\r\n                if(angular.isArray(data)){//not pagination\r\n                    extractedData = data;\r\n                }\r\n                else{//pagination\r\n                    extractedData = data.data;\r\n\r\n                    extractedData.last_page = data.last_page;//set the number of pages so the pagination can update\r\n\r\n                    extractedData.total = data.total;\r\n                }\r\n                break;\r\n\r\n            default:\r\n                extractedData = data;\r\n                break;\r\n        }\r\n\r\n        return extractedData;\r\n    });\r\n\r\n    RestangularProvider.setRequestInterceptor(function(elem, operation) {\r\n        if (operation === \"remove\") {\r\n            return null;\r\n        }\r\n        return elem;\r\n    });\r\n\r\n    RestangularProvider.configuration.getIdFromElem = function(elem) {\r\n        // if route is customers ==> returns customerID\r\n        if(elem.route == \"category\"){\r\n            return elem[\"category_id\"];\r\n        }\r\n    }\r\n\r\n});","var app = angular.module('myApp', [\r\n    'ngAnimate',\r\n    'ui.router',\r\n    'ui.bootstrap',\r\n    'ui.tinymce',\r\n    'toaster',\r\n    'ngFileUpload',\r\n    'imagesLoaded',\r\n    'myApp.common',\r\n    'myApp.product',\r\n    'myApp.category',\r\n    'myApp.brand',\r\n    'myApp.checkout'\r\n]);\r\n\r\napp.config(['$provide', Decorate]);\r\n\r\nfunction Decorate($provide) {\r\n    $provide.decorator('carouselDirective', function($delegate) {\r\n        var directive = $delegate[0];\r\n\r\n        directive.templateUrl = \"/templates/custom/carousel.html\";\r\n\r\n        return $delegate;\r\n    });\r\n}\r\n\r\nangular.module('myApp').config(['$stateProvider', '$urlRouterProvider',\r\n    function($stateProvider, $urlRouterProvider) {\r\n\r\n        // For any unmatched url, redirect to /\r\n        $urlRouterProvider.otherwise(\"/\");\r\n\r\n        // Now set up the states\r\n        $stateProvider\r\n            .state('admin', {\r\n                url: \"/admin\",\r\n                templateUrl: \"admin.html\"\r\n            })\r\n            .state('front', {\r\n                templateUrl: \"front.html\"\r\n            })\r\n            .state('front.home', {\r\n                url: \"/\",\r\n                controller: 'HomeController',\r\n                templateUrl: \"templates/front/home.html\"\r\n            })\r\n        ;\r\n\r\n\r\n    }]);\r\n\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\nangular.module('myApp.product', []);\r\n\r\nangular.module('myApp.product').config(['$stateProvider', '$urlRouterProvider',\r\n    function($stateProvider, $urlRouterProvider) {\r\n\r\n    // Now set up the states\r\n    $stateProvider\r\n        .state('admin.product', {\r\n            url: \"/product\",\r\n            controller: 'AdminProductListController',\r\n            templateUrl: 'templates/admin/products/list.html'\r\n        })\r\n        .state('admin.product-add', {\r\n            url: \"/product/add/{id}\",\r\n            controller: 'AdminProductAddController',\r\n            templateUrl: 'templates/admin/products/add.html'\r\n        })\r\n        .state('front.products', {\r\n            url: \"/products\",\r\n            controller: 'ProductListController',\r\n            templateUrl: 'templates/products/list.html'\r\n        })\r\n        .state('front.product', {\r\n            url: \"/product/{alias}\",\r\n            controller: 'ProductViewController',\r\n            templateUrl: 'templates/products/view.html'\r\n        })\r\n    ;\r\n\r\n\r\n}]);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.checkout').controller('CartController', ['$scope', 'Restangular', 'CartService', '$location', '$timeout',\r\n    function($scope, Restangular, CartService, $location, $timeout) {\r\n\r\n        $scope.cart = {};\r\n        $scope.loadCart = function(){\r\n            $scope.isLoading = true;\r\n            Restangular.all('cart').customGET('').then(function(data) {\r\n                $scope.cart = data;\r\n                $scope.isLoading = false;\r\n            }, function() {\r\n                alert('Can not get cart items!');\r\n            });\r\n        }\r\n        $scope.loadCart();\r\n\r\n        $timeout(function(){\r\n            $('.zoomContainer').remove();\r\n        });\r\n\r\n        $scope.removeFromCart = function(productId){\r\n            $scope.isLoading = true;\r\n            CartService.removeFromCart(productId).then(function() {\r\n                $scope.isLoading = false;\r\n                $scope.loadCart();\r\n            }, function() {\r\n                alert('add to cart error!');\r\n                $scope.isLoading = false;\r\n            });\r\n        }\r\n\r\n    }]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('CheckoutController', ['$scope', 'Restangular', 'CheckoutService', '$location', 'toaster',\r\n    function($scope, Restangular, CheckoutService, $location, toaster) {\r\n\r\n        $scope.shipping = {};\r\n        $scope.billing = {};\r\n        $scope.payment = {};\r\n        $scope.shipToBill = 1;\r\n\r\n        $scope.cart = {};\r\n        $scope.loadCart = function(){\r\n            $scope.isLoading = true;\r\n            Restangular.all('cart').customGET('').then(function(data) {\r\n                $scope.cart = data;\r\n                $scope.isLoading = false;\r\n            }, function(data) {\r\n                alert('Cart is empty');\r\n                $location.path('/');\r\n            });\r\n        }\r\n        $scope.loadCart();\r\n\r\n        $scope.saveBillShip = function(){\r\n            $scope.paymentOpen = true;\r\n        }\r\n\r\n        $scope.submitCheckout = function() {\r\n            var $form = $('#payment-form');\r\n\r\n            Stripe.card.createToken($form, stripeResponseHandler);\r\n\r\n            // Prevent the form from submitting with the default action\r\n            return false;\r\n        };\r\n\r\n        function stripeResponseHandler(status, response) {\r\n\r\n            if (response.error) {\r\n                // Show the errors on the form\r\n                var $form = $('#payment-form');\r\n                $form.find('.payment-errors').text(response.error.message);\r\n                $form.find('button').prop('disabled', false);\r\n            } else {\r\n                // response contains id and card, which contains additional card details\r\n                var token = response.id;\r\n                $scope.payment.token = token;\r\n\r\n                // and submit\r\n                $scope.placeOrder();\r\n            }\r\n        };\r\n\r\n        $scope.isSaving = false;\r\n        $scope.placeOrder = function(){\r\n\r\n            var data = {};\r\n            data.shipping = $scope.shipping;\r\n            if($scope.shipToBill == 1){\r\n                $scope.billing = $scope.shipping;\r\n            }\r\n            data.billing = $scope.billing;\r\n            data.payment = $scope.payment;\r\n            data.cart = $scope.cart;\r\n\r\n            $scope.isSaving = true;\r\n            Restangular.all('checkout').customPOST(data, 'place-order').then(function(data) {\r\n                toaster.pop('success', \"\", data.message);\r\n                $location.path('/products');\r\n            }, function(data) {\r\n                toaster.pop('error', \"\", \"Place order error!\");\r\n                $location.path('/products');\r\n            });\r\n        }\r\n\r\n        $scope.oneAtATime = true;\r\n        $scope.billShipOpen = true;\r\n        $scope.paymentOpen = false;\r\n    }]);","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\n\r\nangular.module('myApp.checkout').factory('CartService', ['Restangular','$location',\r\n        function(Restangular, $location) {\r\n\r\n            var service = {};\r\n\r\n            service.addToCart = function(data){\r\n                return Restangular.all('cart').customPOST(data, 'add');\r\n            }\r\n\r\n            service.removeFromCart = function(productId){\r\n                return Restangular.all('cart').customPOST({productId: productId}, 'remove');\r\n            }\r\n\r\n            service.getCartInfo = function(){\r\n                var baseCart = Restangular.all('cart');\r\n                baseCart.customGET('').then(function(data) {\r\n                    return data;\r\n                }, function() {\r\n                    alert('cart items have error!');\r\n                });\r\n            }\r\n\r\n            return service;\r\n        }]\r\n);","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\n\r\nangular.module('myApp.checkout').factory('CheckoutService', ['Restangular','$location',\r\n        function(Restangular, $location) {\r\n\r\n            var service = {};\r\n\r\n            service.addToCart = function(data){\r\n                var baseCart = Restangular.all('cart');\r\n                return baseCart.customPOST(data, 'add');\r\n            }\r\n\r\n            service.removeFromCart = function(productId){\r\n                var baseCart = Restangular.all('cart');\r\n                return baseCart.customPOST({productId: productId}, 'remove');\r\n            }\r\n\r\n            service.getCartInfo = function(){\r\n                var baseCart = Restangular.all('cart');\r\n                baseCart.customGET('').then(function(data) {\r\n                    return data;\r\n                }, function() {\r\n                    alert('cart items have error!');\r\n                });\r\n            }\r\n\r\n            return service;\r\n        }]\r\n);","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\nangular.module('myApp.common').directive('appGrid', ['Restangular', 'toaster', '$location', '$state', '$sce',\r\n    function (Restangular, toaster, $location, $state, $sce) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: '/templates/common/directives/grid.html',\r\n        scope: {\r\n            url: '@',\r\n            cols: '=',\r\n            items: '=',\r\n            itemKey: '@',\r\n            action: '@?'\r\n        },\r\n        controller: function($scope, $element){\r\n            $scope.getPage = function (tableState) {\r\n\r\n                $scope.isLoading = true;\r\n\r\n                var pagination = tableState.pagination;\r\n                if(pagination.number == undefined){\r\n                    return false;\r\n                }\r\n\r\n                var start = pagination.start || 0;     // This is NOT the page number, but the index of item in the list that you want to use to display the table.\r\n                var number = pagination.number || 10;  // Number of entries showed per page.\r\n                var page = start / pagination.number + 1;\r\n\r\n                var searchParams = tableState.search.predicateObject;\r\n                var orderBy = tableState.sort.predicate;\r\n                var orderDir = tableState.sort.reverse?1:0;\r\n\r\n                var params = {\r\n                    limit: number,\r\n                    page: page,\r\n                    filters: searchParams,\r\n                    order: orderBy,\r\n                    dir: orderDir\r\n                };\r\n\r\n                Restangular.all($scope.url).getList(params).then(function(items) {\r\n\r\n                    tableState.pagination.numberOfPages = items.last_page;//set the number of pages so the pagination can update\r\n\r\n                    $scope.items = items;\r\n\r\n                    $scope.total = items.total;\r\n\r\n                    $scope.isLoading = false;\r\n                });\r\n\r\n\r\n            };\r\n\r\n            $scope.checkAll = function(){\r\n                angular.forEach($scope.items, function (item) {\r\n                    item.selected = !$scope.selectedAll;\r\n                });\r\n            }\r\n\r\n            $scope.editItem = function(item){\r\n                var curUrl = $location.path();\r\n                $location.path(curUrl + '/add/'+ item[$scope.itemKey]);\r\n            }\r\n\r\n            $scope.viewItem = function(item){\r\n                var curUrl = $location.path();\r\n                $location.path(curUrl + '/view/'+ item[$scope.itemKey]);\r\n            }\r\n\r\n            $scope.deleteItems = function(){\r\n\r\n                $scope.isLoading = true;\r\n\r\n                var deletedIds = [];\r\n                var deletedItems = [];\r\n                angular.forEach($scope.items, function (item) {\r\n                    if(item.selected){\r\n                        deletedIds.push(item[$scope.itemKey]);\r\n                        deletedItems.push(item);\r\n                    }\r\n                });\r\n\r\n                Restangular.all($scope.url + '/delete').post({'cid': deletedIds}).then(\r\n                    function(response){\r\n                        angular.forEach(deletedItems, function (item) {\r\n                            var index = $scope.items.indexOf(item);\r\n                            $scope.items.splice(index, 1);\r\n                        });\r\n\r\n                        if($scope.items.length == 0){\r\n                            $state.reload();\r\n                        }\r\n\r\n                        $scope.isLoading = false;\r\n\r\n                        toaster.pop('success', \"\", response.message);\r\n                    },\r\n                    function(response){\r\n                        $scope.isLoading = false;\r\n\r\n                        toaster.pop('error', \"\", response.data.message);\r\n                    }\r\n                );\r\n\r\n            }\r\n\r\n            $scope.$parent.$on('delete_item', function(e, data){\r\n                $scope.deleteItems();\r\n            });\r\n\r\n\r\n            //action buttons\r\n            if($scope.action == undefined){\r\n                $scope.action = 'edit';\r\n            }\r\n        }\r\n    }\r\n}]);\r\n\r\nangular.module('myApp.common').filter('picker', function($filter) {\r\n    return function(value, filterName) {\r\n        if(filterName){\r\n            if(filterName == 'status'){\r\n                if(value == 1){\r\n                    return 'Enabled';\r\n                } else{\r\n                    return 'Disabled';\r\n                }\r\n            }\r\n            else if(filterName == 'yes-no'){\r\n                if(value == 1){\r\n                    return 'Yes';\r\n                } else{\r\n                    return 'No';\r\n                }\r\n            }\r\n            else if(filterName == 'order-status'){\r\n                switch(value){\r\n                    case 1:\r\n                        return 'Created';\r\n                    case 2:\r\n                        return 'Paid';\r\n                    case 3:\r\n                        return 'Completed';\r\n                    case -1:\r\n                        return 'Error';\r\n                }\r\n            }\r\n            else{\r\n                return $filter(filterName)(value);\r\n            }\r\n        }\r\n        else{\r\n            return value;\r\n        }\r\n    };\r\n});","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\n\r\nangular.module('myApp.common').directive('appPagination', function () {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            'total': '='\r\n        },\r\n        templateUrl: '/templates/common/directives/pagination.html',\r\n        link: function (scope, elem, attrs) {\r\n\r\n        }\r\n    }\r\n});","/**\r\n * Created by doanthuan on 4/18/2015.\r\n */\r\nangular.module('myApp.common').directive('appSpinner', function () {\r\n    return {\r\n        restrict: 'E',\r\n        template: '<div class=\"app-spinner\">' +\r\n        '<span class=\"fa fa-spinner fa-spin\"></span>' +\r\n        '</div>'\r\n    };\r\n});","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\nangular.module('myApp.common').directive('appToolbar', ['$location', function ($location) {\r\n    return {\r\n        restrict: 'E',\r\n        scope: {\r\n            'pageTitle': '@',\r\n            'buttons': '='\r\n        },\r\n        templateUrl: '/templates/common/directives/toolbar.html',\r\n        controller: function($scope, $element){\r\n            $scope.initButtons = function(){\r\n                $scope.toolbarButtons = [];\r\n                if($scope.buttons){\r\n                    $scope.buttons.forEach(function(aButton){\r\n\r\n                        if(typeof aButton == 'string'){\r\n                            aButton = {name:aButton};\r\n                        }\r\n                        var buttonName = aButton.name;\r\n\r\n                        var button = null;\r\n                        switch(buttonName){\r\n                            case 'add':\r\n                                button = {\r\n                                    text: 'Add New',\r\n                                    class: 'btn-success',\r\n                                    icon: 'glyphicon glyphicon-plus',\r\n                                    click: function(){\r\n                                        var curUrl = $location.path();\r\n                                        $location.path(curUrl + '/add');\r\n                                    }\r\n                                };\r\n                                break;\r\n                            case 'delete':\r\n                                button = {\r\n                                    text: 'Delete',\r\n                                    class: 'btn-danger',\r\n                                    icon: 'glyphicon glyphicon-remove',\r\n                                    click: function(){\r\n                                        $scope.$parent.$emit('delete_item');\r\n                                    }\r\n                                };\r\n                                break;\r\n                            case 'save':\r\n                                button = {\r\n                                    text: 'Save',\r\n                                    class: 'btn-primary',\r\n                                    click: function(){\r\n                                        $scope.$parent.$emit('save_item');\r\n                                    }\r\n                                };\r\n                                break;\r\n                            case 'cancel':\r\n                                button = {\r\n                                    text: 'Cancel',\r\n                                    class: 'btn-default',\r\n                                    click: function(){\r\n                                        window.history.back();\r\n                                    }\r\n                                };\r\n                                break;\r\n                            default :\r\n                                button = {\r\n                                    text: 'Undefined',\r\n                                    class: 'btn-default'\r\n                                };\r\n                                break;\r\n                        }\r\n                        var mergedButton = angular.extend(button, aButton);\r\n\r\n                        $scope.toolbarButtons.push(mergedButton);\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n            $scope.initButtons();\r\n\r\n        }\r\n    }\r\n}]);","/**\r\n * Created by doanthuan on 4/28/2015.\r\n */\r\nangular.module('myApp').controller('HomeController', ['$scope', function($scope) {\r\n\r\n    $scope.myInterval = 5000;\r\n    var slides = $scope.slides = [];\r\n    $scope.addSlide = function(i) {\r\n        slides.push({\r\n            image: '/images/banner'+i+'.jpg',\r\n            text: ''\r\n        });\r\n    };\r\n    for (var i=1; i<4; i++) {\r\n        $scope.addSlide(i);\r\n    }\r\n\r\n    $('.carousel').carousel();\r\n\r\n}]);\r\n","/**\r\n * Created by doanthuan on 4/28/2015.\r\n */\r\nangular.module('myApp').controller('MainController', ['$scope', '$location', function($scope, $location) {\r\n\r\n    //detect admin area\r\n    $scope.isAdmin = false;\r\n    var path = $location.path();\r\n    if( path.indexOf(\"admin\") > 0 ){\r\n        $scope.isAdmin = true;\r\n    }\r\n\r\n    if( path.indexOf(\"product\") > 0 ){\r\n        $scope.curPage = 'product';\r\n        if( path.indexOf(\"products\") > 0 ){\r\n            $scope.curPage = 'products';\r\n        }\r\n    }\r\n\r\n    if( path.indexOf(\"cart\") > 0 ){\r\n        $scope.curPage = 'cart';\r\n    }\r\n\r\n}]);\r\n","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('ProductListController', ['$scope', 'Restangular', 'ProductService',\r\n    function($scope, Restangular, ProductService) {\r\n\r\n        $scope.sortBy = 'hits|DESC';\r\n        $scope.filters = {};\r\n        $scope.getList = function () {\r\n\r\n            $scope.isLoading = true;\r\n\r\n            var sortBy = $scope.sortBy;\r\n            var sortSegments = sortBy.split('|');\r\n\r\n            var params = {\r\n                filters: $scope.filters,\r\n                order: sortSegments[0],\r\n                dir: sortSegments[1]\r\n            };\r\n\r\n            Restangular.all('product').getList(params).then(function(items) {\r\n\r\n                angular.forEach(items, function(item){\r\n\r\n                    ProductService.colorIdsToObjectsThumbnail(item);\r\n\r\n                });\r\n\r\n                $scope.items = items;\r\n\r\n                $scope.total = items.total;\r\n\r\n                $scope.isLoading = false;\r\n            });\r\n        };\r\n        $scope.getList();\r\n\r\n        $scope.getThumbnail = function(item){\r\n            var result = '';\r\n            angular.forEach(item.colors, function(color){\r\n                if(color.active){\r\n                    result = color.thumbnail;\r\n                    return;\r\n                }\r\n            })\r\n            return result;\r\n        }\r\n\r\n        $scope.selectColor = function(color, item){\r\n            angular.forEach(item.colors, function(aColor){\r\n                aColor.active = false;\r\n            })\r\n            color.active = true;\r\n            item.thumbnail = color.thumbnail;\r\n        }\r\n\r\n        $scope.selectItem = function(item, filter){\r\n            if(item.selected == null || item.selected == false){\r\n                filter.push(item.id);\r\n                item.selected = true;\r\n            }\r\n            else{\r\n                filter.splice(filter.indexOf(item.id), 1);\r\n                item.selected = false;\r\n            }\r\n            $scope.getList();\r\n        }\r\n\r\n        $scope.selectEligible = function(){\r\n            $scope.filters.eligible = $scope.filters.eligible == ''? 1:'';\r\n            $scope.getList();\r\n        }\r\n\r\n        $scope.clearAllFilters = function(){\r\n            $scope.initFilters();\r\n            $scope.getList();\r\n        }\r\n\r\n        $scope.initFilters = function(){\r\n            $scope.filters.color = [];\r\n            $scope.filters.face_shape = [];\r\n            $scope.filters.frame_size = [];\r\n            $scope.filters.frame_type = [];\r\n            $scope.filters.frame_shape = [];\r\n            $scope.filters.prices = [];\r\n            $scope.filters.eligible = '';\r\n\r\n\r\n            $scope.colors = ProductService.getColors();\r\n\r\n            $scope.faceShapes = ProductService.getFaceShapes();\r\n\r\n            $scope.frameSizes = ProductService.getFrameSizes();\r\n\r\n            $scope.frameTypes = ProductService.getFrameTypes();\r\n\r\n            $scope.frameShapes = ProductService.getFrameShapes();\r\n\r\n            $scope.prices = ProductService.getFilterPrices();\r\n        }\r\n        $scope.initFilters();\r\n\r\n        Restangular.all('brand').getList().then(function(items) {\r\n            $scope.brands = items;\r\n        });\r\n\r\n    }]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('ProductViewController', ['$scope', 'Restangular', 'ProductService', '$stateParams', '$timeout', '$location', 'CartService',\r\n    function ($scope, Restangular, ProductService, $stateParams, $timeout, $location, CartService) {\r\n\r\n        $scope.isLoading = true;\r\n        Restangular.one('product/get-by-alias', $stateParams.alias).get().then(function (product) {\r\n\r\n            ProductService.colorIdsToObjects(product);\r\n\r\n            $scope.product = product;\r\n\r\n            $scope.product.colors[0].selected = true;\r\n            $scope.selectedColorName = $scope.product.colors[0].name;\r\n\r\n            $scope.isLoading = false;\r\n\r\n        });\r\n\r\n        $scope.$on('ALWAYS', function() {\r\n            $scope.initGallery();\r\n        });\r\n\r\n        $scope.initGallery = function(){\r\n            angular.forEach($scope.product.colors, function(color){\r\n                $(\"#zoom_\"+color.id).elevateZoom({\r\n                    gallery: 'gallery_'+color.id,\r\n                    cursor: 'pointer',\r\n                    galleryActiveClass: 'active',\r\n                    imageCrossfade: true,\r\n                    scrollZoom : true,\r\n                    constrainType:\"width\",\r\n                    constrainSize:643\r\n                });\r\n            })\r\n        };\r\n\r\n        $scope.selectColor = function(color){\r\n            angular.forEach($scope.product.colors, function(color){\r\n                color.selected = false;\r\n            })\r\n\r\n            $scope.selectedColorName = color.name;\r\n            color.selected = true;\r\n        }\r\n\r\n\r\n        $scope.selected_package_code = 'single_vision';\r\n\r\n        $scope.packages = {\r\n            'single_vision' : {\r\n                'name': 'Single Vision',\r\n                'lens':{\r\n                    'cr39' : {'name': 'CR-39', 'price': 39},\r\n                    'poly' : {'name': 'Polycarbonate', 'price': 79},\r\n                    'ulpoly' : {'name': 'High-Index', 'price': 99}\r\n                },\r\n                'upgrades': [1]\r\n            },\r\n            'multi_vision' : {\r\n                'name': 'Progressive/Multifocal Lenses',\r\n                'lens':{\r\n                    'cr39' : {'name': 'CR-39', 'price': 79},\r\n                    'poly' : {'name': 'Polycarbonate', 'price': 99},\r\n                    'ulpoly' : {'name': 'High-Index', 'price': 139}\r\n                },\r\n                'upgrades': [1]\r\n            },\r\n            'reader' : {\r\n                'name': 'Reader',\r\n                'price': 39,\r\n                'upgrades': [1]\r\n            },\r\n            'plano' : {\r\n                'name': 'Blank Lenses',\r\n                'price': 0,\r\n                'upgrades': [1, 2]\r\n            },\r\n            'demo' : {\r\n                'name': 'Frame Only',\r\n                'price': 0,\r\n                'upgrades': []\r\n            }\r\n        }\r\n\r\n        $scope.packages.lens_choice = 'cr39';\r\n\r\n        $scope.upgrades = [\r\n            {name:'CleanShield', price: 49},\r\n            {name:'Transitions', price: 99}\r\n        ];\r\n\r\n\r\n        $scope.changeSelectedPackage = function(selected_package_code){\r\n            $scope.selected_package_code = selected_package_code;\r\n        }\r\n\r\n        $scope.getPriceOptions = function(){\r\n            var price = 0;\r\n            //lens options\r\n            if($scope.selected_package_code == 'single_vision' || $scope.selected_package_code == 'multi_vision'){\r\n                price = $scope.packages[$scope.selected_package_code].lens[$scope.packages.lens_choice].price;\r\n            }\r\n            else{\r\n                price = $scope.packages[$scope.selected_package_code].price;\r\n            }\r\n            //upgrades\r\n            if($scope.upgrades[0].selected){\r\n                price += $scope.upgrades[0].price;\r\n            }\r\n            if($scope.upgrades[1].selected){\r\n                price += $scope.upgrades[1].price;\r\n            }\r\n            return price;\r\n        }\r\n\r\n        $scope.isSaving = false;\r\n        $scope.addToCart = function(productId){\r\n            $scope.isSaving = true;\r\n            var data = {\r\n                productId: productId,\r\n                color: $scope.selectedColorName\r\n            }\r\n            if($scope.packages[$scope.selected_package_code]){\r\n                data.package = $scope.packages[$scope.selected_package_code].name;\r\n            }\r\n            if($scope.packages[$scope.selected_package_code].lens[$scope.packages.lens_choice]){\r\n                data.lens = $scope.packages[$scope.selected_package_code].lens[$scope.packages.lens_choice];\r\n            }\r\n            data.upgrades = [];\r\n            if($scope.upgrades[0].selected){\r\n                data.upgrades.push($scope.upgrades[0]);\r\n            }\r\n            if($scope.upgrades[1].selected){\r\n                data.upgrades.push($scope.upgrades[1]);\r\n            }\r\n\r\n            data.price_options = $scope.getPriceOptions();\r\n\r\n            CartService.addToCart(data).then(function() {\r\n                $location.path('/cart');\r\n                $scope.isSaving = false;\r\n            }, function() {\r\n                alert('add to cart error!');\r\n                $scope.isSaving = false;\r\n            });\r\n        }\r\n\r\n    }]);","/**\r\n * Created by doanthuan on 4/12/2015.\r\n */\r\n\r\nangular.module('myApp.product').factory('ProductService', [\r\n        function() {\r\n\r\n            var service = {};\r\n\r\n            service.getColors = function(){\r\n                return [\r\n                    {id: 1, name:'SHINY BLACK', class: 'black'},\r\n                    {id: 2, name:'BLACK & TEXTURE', class: 'black2'},\r\n                    {id: 3, name:'Blue', class: 'blue'},\r\n                    {id: 4, name:'Brown', class: 'brown'},\r\n                    {id: 5, name:'Burgundy', class: 'burgundy'},\r\n                    {id: 6, name:'Crystal', class: 'crystal'},\r\n                    {id: 7, name:'Gold', class: 'gold'},\r\n                    {id: 8, name:'Green', class: 'green'},\r\n                    {id: 9, name:'Grey', class: 'grey'},\r\n                    {id: 10, name:'Gunmetal', class: 'gunmetal'},\r\n                    {id: 11, name:'Orange', class: 'orange'},\r\n                    {id: 12, name:'Pink', class: 'pink'},\r\n                    {id: 13, name:'Print', class: 'print'},\r\n                    {id: 14, name:'Purple', class: 'purple '},\r\n                    {id: 15, name:'DARK RED TRANSPARENT', class: 'red'},\r\n                    {id: 16, name:'Silver', class: 'silver'},\r\n                    {id: 17, name:'DARK HAVANA', class: 'tortoise'},\r\n                    {id: 18, name:'Turquoise', class: 'turquoise'},\r\n                    {id: 19, name:'White', class: 'white'},\r\n                    {id: 20, name:'Yellow', class: 'yellow'}\r\n                ];\r\n            }\r\n\r\n            service.getColorById = function(colorId){\r\n                var colors = service.getColors();\r\n                var retColor = null;\r\n                angular.forEach(colors, function(color){\r\n                    if(color.id == colorId){\r\n                        retColor = color;\r\n                        return;\r\n                    }\r\n                })\r\n                return retColor;\r\n            }\r\n\r\n            service.colorIdsToObjects = function(item){\r\n                if(item.colors != null) {\r\n                    //format colors objects\r\n                    var itemColors = [];\r\n                    angular.forEach(item.colors, function (color) {\r\n                        var newColor = service.getColorById(color.colorId);\r\n                        newColor.images = color.images;\r\n                        itemColors.push(newColor);\r\n                    })\r\n                    itemColors[0].active = true;\r\n                    item.colors = itemColors;\r\n                }\r\n            }\r\n\r\n            service.colorIdsToObjectsThumbnail = function(item){\r\n                if(item.colors != null) {\r\n                    //format colors objects\r\n                    var itemColors = [];\r\n                    var colorIds = item.colors.split(',');\r\n                    var images = item.images.split(',');\r\n\r\n                    for(var i = 0 ; i < colorIds.length; i++){\r\n                        var newColor = service.getColorById(colorIds[i]);\r\n                        newColor.thumbnail = images[i];\r\n                        itemColors.push(newColor);\r\n                    }\r\n                    itemColors[0].active = true;\r\n                    item.colors = itemColors;\r\n                }\r\n            }\r\n\r\n            service.getFaceShapes = function(){\r\n                return [\r\n                    {id: 1, name: 'Heart', class: 'heart'},\r\n                    {id: 2, name: 'Oblong', class: 'oblong'},\r\n                    {id: 3, name: 'Oval', class: 'oval'},\r\n                    {id: 4, name: 'Round', class: 'round'},\r\n                    {id: 5, name: 'Square', class: 'square'},\r\n                ];\r\n            }\r\n\r\n            service.getFrameSizes = function(){\r\n                return [\r\n                    {id: 1, name: 'Large'},\r\n                    {id: 2, name: 'Medium'},\r\n                    {id: 3, name: 'Small'},\r\n                    {id: 4, name: 'Petite'}\r\n                ];\r\n            };\r\n\r\n            service.getFrameTypes = function(){\r\n                return [\r\n                    {id: 1, name: 'Full-Rim Metal'},\r\n                    {id: 2, name: 'Full-Rim Plastic'},\r\n                    {id: 3, name: 'Full-Rim Wood'},\r\n                    {id: 4, name: 'Rimless'},\r\n                    {id: 5, name: 'Semi-Rimless'},\r\n                ];\r\n            }\r\n\r\n            service.getFrameShapes = function() {\r\n                return [\r\n                    {id: 1, name: 'Butterfly', class: 'butterfly'},\r\n                    {id: 2, name: 'Cat-Eye', class: 'cat-eye'},\r\n                    {id: 3, name: 'Geometric', class: 'geometric'},\r\n                    {id: 4, name: 'Oval', class: 'oval'},\r\n                    {id: 5, name: 'Rectangle', class: 'rectangle'},\r\n                    {id: 6, name: 'Round', class: 'round'},\r\n                    {id: 7, name: 'Square', class: 'square'}\r\n                ];\r\n            }\r\n\r\n            service.getFilterPrices = function() {\r\n                return [\r\n                    {id: '50 and 100', name: '$50 - $100'},\r\n                    {id: '100 and 150', name: '$100 - $150'},\r\n                    {id: '150 and 200', name: '$150 - $200'},\r\n                    {id: '200 and 250', name: '$200 - $250'},\r\n                    {id: '250 and 300', name: '$250 - $300'},\r\n                    {id: '300 and 1000000', name: 'Over $300'},\r\n                ];\r\n            }\r\n\r\n            return service;\r\n        }]\r\n);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.brand').controller('AdminBrandAddController',\r\n    ['$scope','$location', 'toaster', 'Restangular', '$stateParams',\r\n        function($scope, $location, toaster, Restangular, $stateParams) {\r\n\r\n            $scope.cancel = function(){\r\n                $location.path('/admin/brand');\r\n            };\r\n\r\n            $scope.save = function(){\r\n                $scope.isSaving = true;\r\n                Restangular.all('brand').post($scope.brand).then(\r\n                    function(response){\r\n                        toaster.pop('success', \"\", response.message);\r\n                        $location.path('/admin/brand');\r\n                        $scope.isSaving = false;\r\n                    },\r\n                    function(error){\r\n                        toaster.pop('error', \"\", error.data.message);\r\n                        $scope.isSaving = false;\r\n                    }\r\n                );\r\n            };\r\n\r\n            if($stateParams.id){\r\n                $scope.isEdit = true;\r\n                Restangular.one('brand', $stateParams.id).get().then(function(response){\r\n                    $scope.brand = response;\r\n                });\r\n\r\n            }else{\r\n                $scope.isEdit = false;\r\n                $scope.brand = {};\r\n            }\r\n\r\n\r\n        }]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.brand').controller('AdminBrandListController', ['$scope', 'Restangular', 'toaster', '$location',\r\n    function($scope, Restangular, toaster, $location) {\r\n\r\n    $scope.add = function(){\r\n        $location.path('/admin/brand/add/');\r\n    };\r\n\r\n    $scope.remove = function(){\r\n        //emit delete event to grid\r\n        $scope.$emit('delete_item');\r\n    };\r\n\r\n    $scope.gridCols = [\r\n        {title: 'Name', name: 'name', search: 'text'},\r\n        {title: 'For Men', name: 'for_men', format: 'yes-no'},\r\n        {title: 'For Women', name: 'for_women', format: 'yes-no'}\r\n    ];\r\n\r\n    $scope.brands = null;\r\n\r\n\r\n}]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.category').controller('AdminCategoryAddController',\r\n    ['$scope','$location', 'toaster', 'Restangular', '$stateParams',\r\n        function($scope, $location, toaster, Restangular, $stateParams) {\r\n\r\n            $scope.cancel = function(){\r\n                $location.path('/admin/category');\r\n            };\r\n\r\n            $scope.save = function(){\r\n                $scope.isSaving = true;\r\n                Restangular.all('category').post($scope.category).then(\r\n                    function(response){\r\n                        toaster.pop('success', \"\", response.message);\r\n                        $location.path('/admin/category');\r\n                        $scope.isSaving = false;\r\n                    },\r\n                    function(error){\r\n                        toaster.pop('error', \"\", error.data.message);\r\n                        $scope.isSaving = false;\r\n                    }\r\n                );\r\n            };\r\n\r\n            if($stateParams.id){\r\n                $scope.isEdit = true;\r\n                Restangular.one('category', $stateParams.id).get().then(function(response){\r\n                    $scope.category = response;\r\n                });\r\n\r\n            }else{\r\n                $scope.isEdit = false;\r\n                $scope.category = {};\r\n            }\r\n\r\n            //$scope.isLoading = true;\r\n            //Restangular.all('category').getList().then(function(items) {\r\n            //\r\n            //    $scope.categories = items;\r\n            //    $scope.isLoading = false;\r\n            //});\r\n\r\n\r\n        }]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.category').controller('AdminCategoryListController', ['$scope', 'Restangular', 'toaster', '$location',\r\n    function($scope, Restangular, toaster, $location) {\r\n\r\n    $scope.add = function(){\r\n        $location.path('/admin/category/add/');\r\n    };\r\n\r\n    $scope.remove = function(){\r\n        //emit delete event to grid\r\n        $scope.$emit('delete_item');\r\n    };\r\n\r\n    $scope.gridCols = [\r\n        {title: 'Name', name: 'name', search: 'text'},\r\n        {title: 'Child Count', name: 'child_count', search: 'text'}\r\n    ];\r\n\r\n    $scope.categories = null;\r\n\r\n\r\n}]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.checkout').controller('AdminOrderListController', ['$scope', 'Restangular', 'toaster', '$location',\r\n    function($scope, Restangular, toaster, $location) {\r\n\r\n        $scope.gridCols = [\r\n            {title: 'Order Time', name: 'created_at'},\r\n            {title: 'Amount', name: 'amount', search: 'text'},\r\n            {title: 'Customer', name: 'customer_email', search: 'text'},\r\n            {title: 'Status', name: 'status', format: 'order-status'}\r\n        ];\r\n\r\n\r\n    }]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.checkout').controller('AdminOrderViewController',\r\n    ['$scope','$location', 'toaster', 'Restangular', '$stateParams',\r\n        function($scope, $location, toaster, Restangular, $stateParams) {\r\n\r\n\r\n            Restangular.one('order', $stateParams.id).get().then(function(response){\r\n                $scope.order = response.order;\r\n                $scope.billing = response.billing;\r\n                $scope.shipping = response.shipping;\r\n                $scope.orderItems = response.orderItems;\r\n            });\r\n\r\n            $scope.getOrderStatus = function(status) {\r\n                switch(status){\r\n                    case 1:\r\n                        return 'Created';\r\n                    case 2:\r\n                        return 'Paid';\r\n                    case 3:\r\n                        return 'Completed';\r\n                    case -1:\r\n                        return 'Error';\r\n                }\r\n            }\r\n\r\n        }]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('AdminProductAddController',\r\n    ['$scope','$location', 'toaster', 'Restangular', '$stateParams', 'Upload', 'ProductService',\r\n        function($scope, $location, toaster, Restangular, $stateParams, Upload, ProductService) {\r\n\r\n            $scope.cancel = function(){\r\n                $location.path('/admin/product');\r\n            }\r\n\r\n            $scope.save = function(){\r\n                $scope.isSaving = true;\r\n\r\n                var productImages = [];\r\n                angular.forEach($scope.product.colors, function(color){\r\n                    angular.forEach($scope.images[color.id], function(image){\r\n                        productImages.push(image);\r\n                    });\r\n                });\r\n                $scope.product.images = productImages;\r\n\r\n                Restangular.all('product').post($scope.product).then(\r\n                    function(response){\r\n                        toaster.pop('success', \"\", response.message);\r\n                        $location.path('/admin/product');\r\n                        $scope.isSaving = false;\r\n                    },\r\n                    function(error){\r\n                        toaster.pop('error', \"\", error.data.message);\r\n                        $scope.isSaving = false;\r\n                    }\r\n                );\r\n            };\r\n\r\n            $scope.tinymceOptions = {\r\n                handle_event_callback: function (e) {\r\n                    // put logic here for keypress\r\n                }\r\n            };\r\n\r\n            $scope.images = {};\r\n            $scope.selectColors = function(){\r\n                $scope.isSelected = true;\r\n                angular.forEach($scope.product.colors, function(color){\r\n                    var colorId = color.id;\r\n                    if(typeof colorId != 'undefined'){\r\n                        $scope.$watch('images.'+colorId, function (newvalue, oldvalue) {\r\n                            if(newvalue == undefined || newvalue == null){\r\n                                return;\r\n                            }\r\n                            $scope.upload($scope.images[colorId], colorId);\r\n                        });\r\n                    }\r\n                })\r\n            }\r\n\r\n            $scope.upload = function (files, colorId) {\r\n                if (files && files.length) {\r\n                    for (var i = 0; i < files.length; i++) {\r\n                        var file = files[i];\r\n                        Upload.upload({\r\n                            url: 'media/upload',\r\n                            fields: {'color-id': colorId},\r\n                            file: file\r\n                        }).progress(function (evt) {\r\n                            var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\r\n                            console.log('progress: ' + progressPercentage + '% ' + evt.config.file.name);\r\n                            $scope.isUploading = true;\r\n                        }).success(function (data, status, headers, config) {\r\n                            config.file.media_id = data;\r\n                            files.push(config.file);\r\n                            $scope.isUploading = false;\r\n                        });\r\n                    }\r\n                    files = [];\r\n                }\r\n            };\r\n\r\n            //init data\r\n            $scope.genders = [\r\n                {id: 1, name: 'Women'},\r\n                {id: 2, name: 'Men'},\r\n                {id: 3, name: 'Unisex'}\r\n            ];\r\n\r\n            $scope.colors = ProductService.getColors();\r\n\r\n            $scope.shapes = ProductService.getFaceShapes();\r\n\r\n            $scope.frameSizes = ProductService.getFrameSizes();\r\n\r\n            $scope.frameTypes = ProductService.getFrameTypes();\r\n\r\n            $scope.frameShapes = ProductService.getFrameShapes();\r\n\r\n\r\n            $scope.isLoading = true;\r\n            Restangular.all('category').getList().then(function(items) {\r\n\r\n                $scope.categories = items;\r\n                $scope.isLoading = false;\r\n\r\n            });\r\n\r\n            Restangular.all('brand').getList().then(function(items) {\r\n\r\n                $scope.brands = items;\r\n                $scope.isLoading = false;\r\n            });\r\n\r\n            $scope.product = {};\r\n            if($stateParams.id){\r\n                $scope.isEdit = true;\r\n                Restangular.one('product', $stateParams.id).get().then(function(response){\r\n                    $scope.product = response;\r\n                });\r\n\r\n            }else{\r\n                $scope.isEdit = false;\r\n            }\r\n\r\n\r\n        }]);","/**\r\n * Created by doanthuan on 4/9/2015.\r\n */\r\n\r\nangular.module('myApp.product').controller('AdminProductListController', ['$scope', 'Restangular', 'toaster', '$location',\r\n    function($scope, Restangular, toaster, $location) {\r\n\r\n    $scope.add = function(){\r\n        $location.path('/admin/product/add/');\r\n    };\r\n\r\n    $scope.remove = function(){\r\n        //emit delete event to grid\r\n        $scope.$emit('delete_item');\r\n    };\r\n\r\n    $scope.gridCols = [\r\n        {title: 'Name', name: 'name', search: 'text'},\r\n        {title: 'Price', name: 'price', search: 'text', format: 'currency'},\r\n        {title: 'Created At', name: 'created_at', format: 'date'},\r\n        {title: 'Status', name: 'status', format: 'status'}\r\n        ];\r\n\r\n    $scope.products = null;\r\n\r\n}]);"],"sourceRoot":"/source/"}